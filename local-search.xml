<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>废话文学 --开学自我介绍</title>
    <link href="/2021/09/12/%E5%BA%9F%E8%AF%9D%E6%96%87%E5%AD%A6-%E5%BC%80%E5%AD%A6%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    <url>/2021/09/12/%E5%BA%9F%E8%AF%9D%E6%96%87%E5%AD%A6-%E5%BC%80%E5%AD%A6%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="废话文学-–开学自我介绍"><a href="#废话文学-–开学自我介绍" class="headerlink" title="废话文学 –开学自我介绍"></a>废话文学 –开学自我介绍</h1><p>家人们，今天是我开学第一天来上课，那么就说明了这是我这学期上的第一天课，好久没有见大家了，记得上次看见大家的时候还是在上次，真是一个暑假未见如隔一个暑假。</p><p>接下来我长话短说，不过说来话长，大家一定要好好学习这门课，因为如果大家没有学好这门课的话，那么就等于这门课大家没有学好。</p><p>俗话说得好，那就是有句老话说的好，活到老，学到老，如果大家愿意多花一点时间去学习的话那么你会发现你多花了一点时间。</p><p>“诶，那位同学说，我长得这么帅，明明可以靠颜值，却非要靠才华呢？如果我不靠才华的话，我就只能靠颜值了。”</p><p>谁又能想到我一个20岁的帅气大学生，十年前年居然仅仅只有十岁呢？那这些都不重要，因为这些不重要，因为你只管努力，剩下的交给天意，明天的事情在后天你自然就知道。</p><p>大家一定要珍惜这段话，因为我用一分钟给大家讲话的时候，时间已经过去了六十秒。</p><p>但凡这句话有一点用的话，它也不至于一点用也没有。</p><p>Ps： </p><p>我猛然一听，就猛然听到这位同学的自我介绍，我直呼我直呼，上次听到这么这么的发言还是上次，这发言属于是典型的典型了属于是，我之前还没发现，当我发现的时候我已经发现了，这发言就像一个发言，发言的内容充满了内容，我不禁感慨了一句感慨，真是听君一席话，如听一席话，</p><p>其实这些话说的还是挺有逻辑的，举个例子，有一碗面和一盘菜摆在你面前，你可能先吃面，同一个道理，我举的例子和我说的话一点关系都没有。情况就是这么个情况，具体是什么情况，还是要看情况。</p><p>听完了你的分析，我决定再自己分析分析。希望下次看到这么这么的发言是下次！</p>]]></content>
    
    
    <categories>
      
      <category>胡说八道</category>
      
    </categories>
    
    
    <tags>
      
      <tag>废话文学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>for i in range ()作用</title>
    <link href="/2021/09/11/for-i-in-range-%E4%BD%9C%E7%94%A8/"/>
    <url>/2021/09/11/for-i-in-range-%E4%BD%9C%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="for-i-in-range-作用："><a href="#for-i-in-range-作用：" class="headerlink" title="for i in range ()作用："></a>for i in range ()作用：</h1><p>range()是一个函数， for i in range () 就是给i赋值：<br>比如 <code>for i in range （1，3）：</code><br>就是把1,2依次赋值给i</p><h2 id="range-函数的使用是这样的"><a href="#range-函数的使用是这样的" class="headerlink" title="range () 函数的使用是这样的:"></a>range () 函数的使用是这样的:</h2><div class="note note-success">            <p><code>range(start, stop, [step])</code>，分别是起始、终止和步长<br><code>range（3）</code>即：从0到3，不包含3，即0,1,2</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;&gt;&gt; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(3):<br><span class="hljs-built_in">print</span>(i)<br><br><br>0<br>1<br>2<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>range(1,3) 即：从1到3，不包含3，即1,2</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;&gt;&gt; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1,3):<br><span class="hljs-built_in">print</span>(i)<br><br><br>1<br>2<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>range（1,3,2）即：从1到3，每次增加2，因为1+2=3，所以输出只有1<br>第三个数字2是代表步长。如果不设置，就是默认步长为1</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;&gt;&gt; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1,3,2):<br><span class="hljs-built_in">print</span>(i)<br><br><br>1<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>如果改成range(1,10,2)，就会输出1.3.5.7.9</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;&gt;&gt; <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1,10,2):<br><span class="hljs-built_in">print</span>(i)<br><br><br>1<br>3<br>5<br>7<br>9<br></code></pre></td></tr></table></figure><p><a href="https://985.wiki/">046569</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python字符串</title>
    <link href="/2021/09/11/Python%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <url>/2021/09/11/Python%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="Python字符串"><a href="#Python字符串" class="headerlink" title="Python字符串"></a>Python字符串</h1><div class="note note-success">            <p>\ 在python中代表转义</p><p>%s 代表字符串类型占位符</p><p>%d 代表数值类型占位符</p><p>%r 代表全部类型占位符</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">input_1=input(<span class="hljs-string">&#x27;请输入：&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你输入了：&#x27;</span>,input_1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\&#x27;</span> \\<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">text_3=&#x27;</span>zhang san<span class="hljs-string">&#x27;</span><br><span class="hljs-string">print(&#x27;</span>your naem is %s<span class="hljs-string">&#x27;%text_3)</span><br><span class="hljs-string">text_4=123```</span><br><span class="hljs-string">print(&#x27;</span>you int is %d<span class="hljs-string">&#x27;%text_4)</span><br><span class="hljs-string">text_5=&#x27;</span>ni hao<span class="hljs-string">&#x27;</span><br><span class="hljs-string">print(&#x27;</span>%r<span class="hljs-string">&#x27;%text_5)</span><br></code></pre></td></tr></table></figure><p><img src="https://img2020.cnblogs.com/blog/2194565/202011/2194565-20201109054350571-1999017590.png"></p><p><a href="https://985.wiki/">046569</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 主题美化 --添加鼠标滑动特效</title>
    <link href="/2021/09/11/Hexo-%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96-%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E6%BB%91%E5%8A%A8%E7%89%B9%E6%95%88/"/>
    <url>/2021/09/11/Hexo-%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96-%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E6%BB%91%E5%8A%A8%E7%89%B9%E6%95%88/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-主题美化-–添加鼠标滑动特效"><a href="#Hexo-主题美化-–添加鼠标滑动特效" class="headerlink" title="Hexo 主题美化 –添加鼠标滑动特效"></a>Hexo 主题美化 –添加鼠标滑动特效</h1><blockquote><p><strong>效果如下</strong></p></blockquote><p><a href="https://imgtu.com/i/hzx8aQ"><img src="https://z3.ax1x.com/2021/09/11/hzx8aQ.gif" alt="hzx8aQ.gif"></a></p><h2 id="●-添加特效"><a href="#●-添加特效" class="headerlink" title="● 添加特效"></a>● 添加特效</h2><h3 id="在-themes-next-source-js-中新建huadongtexiao-js文件，并添加以下代码"><a href="#在-themes-next-source-js-中新建huadongtexiao-js文件，并添加以下代码" class="headerlink" title="在\themes\next\source\js\中新建huadongtexiao.js文件，并添加以下代码"></a>在\themes\next\source\js\中新建huadongtexiao.js文件，并添加以下代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">hudongtexiao</span></span>() &#123;<br>  <br>  var possibleColors = [<span class="hljs-string">&quot;#D61C59&quot;</span>, <span class="hljs-string">&quot;#E7D84B&quot;</span>, <span class="hljs-string">&quot;#1B8798&quot;</span>]<br>  var width = window.innerWidth;<br>  var height = window.innerHeight;<br>  var cursor = &#123;x: width/2, y: width/2&#125;;<br>  var particles = [];<br>  <br>  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">init</span></span>() &#123;<br>    bindEvents();<br>    loop();<br>  &#125;<br>  <br>  // Bind events that are needed<br>  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">bindEvents</span></span>() &#123;<br>    document.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, onMouseMove);<br>    document.addEventListener(<span class="hljs-string">&#x27;touchmove&#x27;</span>, onTouchMove);<br>    document.addEventListener(<span class="hljs-string">&#x27;touchstart&#x27;</span>, onTouchMove);<br>    <br>    window.addEventListener(<span class="hljs-string">&#x27;resize&#x27;</span>, onWindowResize);<br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> onWindowResize(e) &#123;<br>    width = window.innerWidth;<br>    height = window.innerHeight;<br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> onTouchMove(e) &#123;<br>    <span class="hljs-keyword">if</span>( e.touches.length &gt; 0 ) &#123;<br>      <span class="hljs-keyword">for</span>( var i = 0; i &lt; e.touches.length; i++ ) &#123;<br>        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);<br>      &#125;<br>    &#125;<br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> onMouseMove(e) &#123;    <br>    cursor.x = e.clientX;<br>    cursor.y = e.clientY;<br>    <br>    addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);<br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> addParticle(x, y, color) &#123;<br>    var particle = new Particle();<br>    particle.init(x, y, color);<br>    particles.push(particle);<br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">updateParticles</span></span>() &#123;<br>    <br>    <span class="hljs-keyword">for</span>( var i = 0; i &lt; particles.length; i++ ) &#123;<br>      particles[i].update();<br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span>( var i = particles.length -1; i &gt;= 0; i-- ) &#123;<br>      <span class="hljs-keyword">if</span>( particles[i].lifeSpan &lt; 0 ) &#123;<br>        particles[i].die();<br>        particles.splice(i, 1);<br>      &#125;<br>    &#125;<br>    <br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">loop</span></span>() &#123;<br>    requestAnimationFrame(loop);<br>    updateParticles();<br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">Particle</span></span>() &#123;<br><br>    this.character = <span class="hljs-string">&quot;*&quot;</span>;<br>    this.lifeSpan = 120; //ms<br>    this.initialStyles =&#123;<br>      <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;fixed&quot;</span>,<br>      <span class="hljs-string">&quot;top&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>, //必须加<br>      <span class="hljs-string">&quot;display&quot;</span>: <span class="hljs-string">&quot;block&quot;</span>,<br>      <span class="hljs-string">&quot;pointerEvents&quot;</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>      <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-string">&quot;10000000&quot;</span>,<br>      <span class="hljs-string">&quot;fontSize&quot;</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>      <span class="hljs-string">&quot;will-change&quot;</span>: <span class="hljs-string">&quot;transform&quot;</span><br>    &#125;;<br><br>    this.init = <span class="hljs-keyword">function</span>(x, y, color) &#123;<br><br>      this.velocity = &#123;<br>        x:  (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() / 2),<br>        y: 1<br>      &#125;;<br>      <br>      this.position = &#123;x: x - 10, y: y - 20&#125;;<br>      this.initialStyles.color = color;<br>      console.log(color);<br><br>      this.element = document.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>      this.element.innerHTML = this.character;<br>      applyProperties(this.element, this.initialStyles);<br>      this.update();<br>      <br>      document.body.appendChild(this.element);<br>    &#125;;<br>    <br>    this.update = <span class="hljs-function"><span class="hljs-title">function</span></span>() &#123;<br>      this.position.x += this.velocity.x;<br>      this.position.y += this.velocity.y;<br>      this.lifeSpan--;<br>      <br>      this.element.style.transform = <span class="hljs-string">&quot;translate3d(&quot;</span> + this.position.x + <span class="hljs-string">&quot;px,&quot;</span> + this.position.y + <span class="hljs-string">&quot;px,0) scale(&quot;</span> + (this.lifeSpan / 120) + <span class="hljs-string">&quot;)&quot;</span>;<br>    &#125;<br>    <br>    this.die = <span class="hljs-function"><span class="hljs-title">function</span></span>() &#123;<br>      this.element.parentNode.removeChild(this.element);<br>    &#125;<br>    <br>  &#125;<br>  <br>  <span class="hljs-keyword">function</span> applyProperties( target, properties ) &#123;<br>    <span class="hljs-keyword">for</span>( var key <span class="hljs-keyword">in</span> properties ) &#123;<br>      target.style[ key ] = properties[ key ];<br>    &#125;<br>  &#125;<br>  <br>  init();<br>&#125;)();<br></code></pre></td></tr></table></figure><h3 id="然后在-themes-next-layout-layout-ejs-文件里内部引用："><a href="#然后在-themes-next-layout-layout-ejs-文件里内部引用：" class="headerlink" title="然后在\themes\next\layout\layout.ejs 文件里内部引用："></a>然后在\themes\next\layout\layout.ejs 文件里内部引用：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!-- 鼠标滑动彩色特效 --&gt;<br>&lt;script <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> src=<span class="hljs-string">&quot;/js/hudongtexiao.js&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="Hexo三连部署到Github上看一下效果"><a href="#Hexo三连部署到Github上看一下效果" class="headerlink" title="Hexo三连部署到Github上看一下效果"></a>Hexo三连部署到Github上看一下效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo s<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>主题美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用Github Pages，HEXO 搭建个人博客</title>
    <link href="/2021/09/11/Blog%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/09/11/Blog%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Windows下利用Github-Pages，HEXO-搭建个人博客"><a href="#Windows下利用Github-Pages，HEXO-搭建个人博客" class="headerlink" title="Windows下利用Github Pages，HEXO 搭建个人博客"></a>Windows下利用Github Pages，HEXO 搭建个人博客</h1><blockquote><p><strong>Github Pages</strong></p></blockquote><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p><blockquote><p><strong>Hexo</strong></p></blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="●-安装-Node-js"><a href="#●-安装-Node-js" class="headerlink" title="● 安装 Node.js"></a>● 安装 Node.js</h2><p><a href="https://nodejs.org/en/download/">点击此处</a>访问官网，按需下载相应版本，默认安装可以了</p><h2 id="●-安装-Git"><a href="#●-安装-Git" class="headerlink" title="● 安装 Git"></a>● 安装 Git</h2><p><a href="https://git-scm.com/download/win">点击此处</a>访问官网，按需下载相应版本，默认安装即可</p><h2 id="●-检验软件是否安装成功"><a href="#●-检验软件是否安装成功" class="headerlink" title="● 检验软件是否安装成功"></a>● 检验软件是否安装成功</h2><p>按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 Git GUI Here 和 Git Bash Here两个选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git --version<br>$ node -v<br>$ npm -v<br></code></pre></td></tr></table></figure><h2 id="●-Hexo-安装"><a href="#●-Hexo-安装" class="headerlink" title="● Hexo 安装"></a>● Hexo 安装</h2><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ\MyBlog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装 hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-cli -g<br></code></pre></td></tr></table></figure><h2 id="●-Hexo-初始化配置"><a href="#●-Hexo-初始化配置" class="headerlink" title="● Hexo 初始化配置"></a>● Hexo 初始化配置</h2><p>在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：Ｅ\MyBlog\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init<br></code></pre></td></tr></table></figure><h2 id="●-本地查看效果"><a href="#●-本地查看效果" class="headerlink" title="● 本地查看效果"></a>● 本地查看效果</h2><p>执行以下命令，执行完即可登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br>$ hexo server<br></code></pre></td></tr></table></figure><h2 id="●-部署博客到-Github-Pages-上"><a href="#●-部署博客到-Github-Pages-上" class="headerlink" title="● 部署博客到 Github Pages 上"></a>● 部署博客到 Github Pages 上</h2><p>本地博客搭建成功后，接下来就需要将博客部署到Github Pages上</p><p>一、注册 Github 账户：<a href="https://github.com/">点击此处</a>访问 Github 官网，点击 Sign Up 注册账户</p><p>二、创建项目代码库：点击 <strong>New repository</strong> 开始创建</p><p>三、配置 SSH 密钥：只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ\MyBlog） Git Bash Here 输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;your email@example.com&quot;</span><br>//引号里面填写你的邮箱地址，比如我的是admin@gmail.com<br></code></pre></td></tr></table></figure><p>之后会出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/c/Users/you/.ssh/id_rsa):<br>//直接回车将密钥按默认文件进行存储<br></code></pre></td></tr></table></figure><p>然后会出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase):<br>//这里是要你输入密码，其实不需要输什么密码，直接回车就行<br>Enter same passphrase again:<br></code></pre></td></tr></table></figure><p>接下来屏幕会显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Your identification has been saved <span class="hljs-keyword">in</span> /c/Users/you/.ssh/id_rsa.<br>Your public key has been saved <span class="hljs-keyword">in</span> /c/Users/you/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>这里是各种字母数字组成的字符串，结尾是你的邮箱<br>The key<span class="hljs-string">&#x27;s randomart image is:</span><br><span class="hljs-string">这里也是各种字母数字符号组成的字符串</span><br></code></pre></td></tr></table></figure><p>运行以下命令，将公钥的内容复制到系统粘贴板上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ clip &lt; ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>四、在 GitHub 账户中添加你的公钥</p><p>1.登陆 GitHub，进入 <strong>Settings</strong></p><p>2.点击 <strong>SSH and GPG Keys</strong></p><p>3.选择 <strong>New SSH key</strong> ，将剪贴板密钥粘贴到<strong>key</strong>里，<strong>title</strong>里可以随便填写 ，点击<strong>Add SSH Key</strong> 保存</p><p>4.输入以下命令：注意：<a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>不要做任何更改！ 查看是否可以正常连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>五、配置 Git 个人信息</p><p>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;此处填你的用户名&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;此处填你的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>到此为止 SSH Key 配置成功，本机已成功连接到 Github</p><h2 id="●-将本地的-Hexo-文件更新到-Github-的库中"><a href="#●-将本地的-Hexo-文件更新到-Github-的库中" class="headerlink" title="● 将本地的 Hexo 文件更新到 Github 的库中"></a>● 将本地的 Hexo 文件更新到 Github 的库中</h2><p>一、登录 Github 打开自己的项目 <a href="http://yourname.github.io/">http://yourname.github.io</a></p><p>二、鼠标移到 <strong>Clone or download</strong> 按钮，选择 <strong>Use SSH</strong> 复制地址</p><p>三、打开你创建的 Hexo 文件夹（如：E:\MyBlog\Hexo），右键用记事本打开该文件夹下的 <strong>_config.yml</strong> 文件，搜索关键字：<strong>deploy:</strong> 并在其下面的 <strong>type</strong> 内添加git， <strong>repository</strong>内添加刚才复制的地址，并保存退出。比如：</p><p><code>deploy:</code><br>  <code>type: git</code><br>  repository: <a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;">&#103;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;</a>:I046569/I046569.github.io.git`</p><p>四、在 Hexo 文件夹下分别执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br>$ hexo g<br>$ hexo d<br></code></pre></td></tr></table></figure><p>五、访问博客</p><p>你的博客地址：<a href="https://username.github.io/">https://username.github.io</a>  比如我的是 <a href="https://985.wiki/">https://I046569.github.io</a>  现在每个人都可以通过此链接访问你的博客了</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>HEXO</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/2021/09/11/title/"/>
    <url>/2021/09/11/title/</url>
    
    <content type="html"><![CDATA[<p>在 markdown 中加入如下的代码来使用便签：</p><div class="note note-success">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><p>在 markdown 中加入如下的代码来使用 Label：</p><span class="label label-primary">text</span><p>在 markdown 中加入如下的代码来使用 Checkbox：</p>            <input type="checkbox" disabled checked="checked">text          <p>你可以在 markdown 中加入如下的代码来使用 Button：</p><a class="btn" href="url"  title="title" target="_blank">text</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">classDiagram<br>Class01 &lt;|-- AveryLongClass : Cool<br>Class03 *-- Class04<br>Class05 o-- Class06<br>Class07 .. Class08<br>Class09 --&gt; C2 : Where am i?<br>Class09 --* C3<br>Class09 --|&gt; Class07<br>Class07 : equals()<br>Class07 : Object[] elementData<br>Class01 : size()<br>Class01 : int chimp<br>Class01 : int gorilla<br>Class08 &lt;--&gt; C2: Cool label<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/09/10/hello-world/"/>
    <url>/2021/09/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
